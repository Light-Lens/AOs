'#' means Comment (to be ignored)
'.' means DONE
'x' means NOT TO BE DONE (REMOVED FEATURE)
'\\\' means Continue the current line in a newline

........................................................................................................................
........................................................Non-Commands....................................................
........................................................................................................................
. Upgrade dotnet from donet 7 to 8 for AOs 2.6
Re-work 'build.py' and leave all the stuff to 'AOs.dev'
Make AOs launch with windows terminal using from a batch file.
Add a setup system on first startup of AOs [if aos.user file doesn't exist in 'Files.x72\\root' folder then only open the setup page, also don't ask for password].
Build a search engine which can search for any file, folder or app in your PC like Ueli, Windows search or Apple Spotlight [Not sure if this is going to be a command or a global feature].

Use "Python.Runtime" module in C# for better connection between C# and Python code.
Implement a spell-checker (wagner-ficher) algo in AOs error log.
Autocomplete filenames when pressed tab.

........................................................................................................................
........................................................Commands........................................................
........................................................................................................................
The "shutdown" command won't shutdown the host machine. Also check if the "restart" commands has the same problem or not.
Leave 4 spaces in tab when updating files in AOs.dev using "dev" command.
When using "dev new" command and the github repo link is asked then clone the repo recursively instead of directly plain cloning.
IMprove "AOs.dev"
Integrate Wikipedia, Play videos on youtube, Cpix and Pixstore in AOs.
Save Filer, Wikipedia, play YouTube videos in 'PowerToys' and access them from the folder using the file_name as command by setting the file to execute description etc in "<command-name>.powertoy" right next to the file you wanna run.
Remove datetime, random, sysinfo, tree, corner, shout
Fix bug 'start .' doesn't open the current folder and shows a crash error. More in Crashreport.log
In the 'history' command also show in which session the command was passed just like Instagram's message page where the messeages are seperated by sessions of time and date
Make the 'help <command-name>' page more useful and informational about the command.

olor - Changes your PC's theme from Dark mode to Light mode.
wlpr, wallpaper - Changes your PC's wallpaper.
auspecto - Convert any audio file into a spectrogram from audio processing for AI.
msoffice - Automate creation and management via any of MS Office tool. *I don't really know how to build this one but this is in my TODO list.
autokey - Automate keyboard or mouse keys to perform any task requiring interaction keyboard or mouse. *Useful for going AFK. I'll be using an AI system to make it work more human-like.
displaysettings - Change your display settings directly from the command line

wiki - Search for information on wikipedia
play - Search for a video on youtube and automatically play the first one.
srh - Search for any thing on Google, Bing, Yahoo, YouTube, Wikipedia, Britannica.
srz - Summarize any text or text file using a simple summarization algorithm.
intscrape: Crawl websites to scrape their URL, Text and other metadata. *Useful for search engines and my NLI

Experimental commands:
@ regedit - Modify Windows Registry settings. *I don't really know how to implement it.
@ updos - Update your operating system directly from command line. *Haven't started to work on this yet.
@ scrn - Take Screenshot. *It's a bit slow.

Improve help messages, giving more detail about the command - such as how to use - when the input is like `help <command-name>`
Further improve the ';' (run multiple commands in a single line) feature. Make it work like a programming language.

If the input is 'powertoys::<file-name>', run the file from the 'PowerToys' folder without checking for similar executable files in the current folder.
If the input is 'startup::.startlist', run the '.startlist' from the 'Startup' folder.
If the input is 'startup::<file-name>', run the file from the 'Startup' folder without checking for similar executable files in the current folder.
